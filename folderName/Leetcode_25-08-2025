class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        Stack<Integer> stack = new Stack<>();
        List<Integer> list = new ArrayList<>();
        for(int i=0;i<mat[0].length;i++){
            int row = 0 ; int col = i;
            while(row<mat.length&&col>=0){
                if(i%2==0){
                    stack.add(mat[row][col]);
                }
                else{
                    list.add(mat[row][col]);
                }
                row++; col--;
            }
            if(i%2==0){
                while(!stack.isEmpty()){
                    list.add(stack.pop());
                }
            }
        }
        int idx = mat[0].length;
        for(int i=1;i<mat.length;i++){
            int row = i ; int col = mat[0].length-1;
            while(row<mat.length&&col>=0){
                if(idx%2==0){
                    stack.add(mat[row][col]);
                }
                else{
                    list.add(mat[row][col]);
                }
                row++; col--;
            }
            if(idx%2==0){
                while(!stack.isEmpty()){
                    list.add(stack.pop());
                }
            }
            idx++;
        }
        int[] arr = new int[list.size()];
        for(int i=0;i<list.size();i++){
            arr[i]=list.get(i);
        }
        return arr;
    }
}
